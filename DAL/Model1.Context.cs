//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    internal partial class NewCommerceEntities : DbContext
    {
        public NewCommerceEntities()
            : base("name=NewCommerceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<FinalOrder> FinalOrders { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<MovieList> MovieLists { get; set; }
    
        public virtual ObjectResult<AddToCart_Result> AddToCart(string productName, string userName, Nullable<int> quantity)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddToCart_Result>("AddToCart", productNameParameter, userNameParameter, quantityParameter);
        }
    
        public virtual ObjectResult<CheckOut_Result> CheckOut(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckOut_Result>("CheckOut", usernameParameter);
        }
    
        public virtual ObjectResult<DisplayAllProducts_Result> DisplayAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayAllProducts_Result>("DisplayAllProducts");
        }
    
        public virtual ObjectResult<DisplayCart_Result> DisplayCart(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayCart_Result>("DisplayCart", userNameParameter);
        }
    
        public virtual ObjectResult<DisplayProduct_ByCategory_Result> DisplayProduct_ByCategory(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayProduct_ByCategory_Result>("DisplayProduct_ByCategory", categoryParameter);
        }
    
        public virtual ObjectResult<FinalBuy_Result> FinalBuy(string orderID)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinalBuy_Result>("FinalBuy", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoginCredentials(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoginCredentials", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<OrderDisplay_Result> OrderDisplay(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderDisplay_Result>("OrderDisplay", usernameParameter);
        }
    
        public virtual int SignUp(string userName, string password, string email, string address)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SignUp", userNameParameter, passwordParameter, emailParameter, addressParameter);
        }
    
        public virtual ObjectResult<AddToCartDisplay_Result> AddToCartDisplay(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddToCartDisplay_Result>("AddToCartDisplay", userNameParameter);
        }
    
        public virtual ObjectResult<AddToUsers_Result> AddToUsers(string name, string address, string email, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddToUsers_Result>("AddToUsers", nameParameter, addressParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<DisplayCheckOut_Result> DisplayCheckOut(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayCheckOut_Result>("DisplayCheckOut", usernameParameter);
        }
    }
}
